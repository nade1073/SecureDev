@model Vladi2.Models.UserAccount

<script type="text/javascript">

  

    function registerFormValidate()
    {
        
        var userName = document.getElementById("username").value;
        var password = document.getElementById("password").value;
        var ConfirmPassword = document.getElementById("ConfirmPassword").value;
        var Email = document.getElementById("Email").value;
        var firstname = document.getElementById("FirstName").value;
        var lastname = document.getElementById("LastName").value;
        var phonenumber = document.getElementById("PhoneNumber").value;
       
        if (userName == "" || password == "" || ConfirmPassword == "" || Email == "" || firstname == "" || lastname == "" || phonenumber == "")
        {
            alert("Please fill all the fields!!");
            return false;
        }
        if (password != ConfirmPassword)
        {
            alert("The passwords are not equal");
            return false;
        }
        var regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@@$!%*?&])[A-Za-z\d$@@$!%*?&]{8,10}/;
        if (!regexPass.test(password))
        {
            alert("Minimum eight and maximum 10 characters, at least one uppercase letter, one lowercase letter, one number and one special character:");
            return false;
        }
        var regexMail=/^([\w\.\-]+)@@([\w\-]+)((\.(\w){2,3})+)$/;
        if (!regexMail.test(Email))
        {
            alert("Email is incorrect");
            return false;
        }
        var firsttext = val.match(/\d+/g);
        if (matches != null) {
            alert('number');
        }
        if (isNaN(phonenumber))
        {
            alert("Phonenumber is contain letters");
            return false;
        }
        if (isNan(firstname))
        {
            
            alert("Names conatain numbers");
            return false;
        }
        if (isNan(lastname)===false) {

            alert("Names conatain numbers");
            return false;
        }
        if (!(/^[a-zA-Z]+$/.test(firstname))) {
            alert("the string has a number");
            return false;
        }
        if (!(/^[a-zA-Z]+$/.test(lastname))) {
            alert("the string has a number");
            return false;
        }


           return true;
    }

    function loginFormValidation()
    {
        var userName = document.getElementById("userLogin").value;
        var password = document.getElementById("passwordLogin").value;
        if(userName == "" || password =="")
        {
            alert("Please fill all the fields!!");
            return false;
        }

    }



    $('#pictureButton').click(function () {

        $('#files').click();

    });

    //Create an image
    $("#files").change(function () {
        if (this.files && this.files[0]) {
            var reader = new FileReader();
            reader.onload = imageIsLoaded;
            reader.readAsDataURL(this.files[0]);
            picArray.push(this.files[0]);

        }
    });
    function imageIsLoaded(e) {

        $(".form-style-test").append("<div class=imageDragger id=imageDragger" + imageCount + "><div class=closer></div><img class=thumbnail id=myImage" + imageCount + " src=#  </> </div>");
        $(".imageDragger").draggable({ containment: ".range" });
        $('#myImage' + imageCount).attr('src', e.target.result);
        $("#myImage" + imageCount).resizable({ containment: ".range", autoHide: true });
        imageCount++;
    };

</script>






<div class="background">
    <div class="login-wrap">
        <div class="login-html">
            <input id="tab-1" type="radio" name="tab" class="sign-in" checked><label for="tab-1" class="tab">Sign In</label>
            <input id="tab-2" type="radio" name="tab" class="sign-up"><label for="tab-2" class="tab">Sign Up</label>
            <div class="login-form">
               @using (Html.BeginForm("login", "home", FormMethod.Post, new { onsubmit = "return loginFormValidation()" }))
               {
                    <div class="sign-in-htm">
                        <div class="group">
                            <label for="userSignin" class="label">Username</label>
                            <input name="username" id="userLogin" type="text" class="input">
                        </div>

                        <div class="group">
                            <label for="passwordSignin" class="label">Password</label>
                            <input id="passwordLogin"name="password" type="password" class="input" data-type="password">
                        </div>
                       @* <p style="color:red">@Model.data</p>*@
                        <div class="group">
                            <input id="check" type="checkbox" class="check" checked>
                            <label for="check"><span class="icon"></span> Keep me Signed in</label>
                        </div>
                        <div class="group">
                            <input id="signInButton" type="submit" class="button" value="Sign In">
                        </div>

                        <div class="hr"></div>
                        <div class="foot-lnk">
                            <a href="#forgot">Forgot Password?</a>
                        </div>
                    </div>
               }
       
                @using (Html.BeginForm("Register", "home", FormMethod.Post, new { onsubmit = "return registerFormValidate()" }))
                {
                    <div class="sign-up-htm">
                        <div class="group">
                      
                           
                            <label for="user" class="label">Username</label>
        
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { id = "username", @class = "input", type = "text", name = "userRegister" } })
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                        <div class="group">
                            <label for="pass" class="label">Password</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { id = "password", type = "password", @class = "input", name = "userRegister" } })
                         @Html.ValidationMessageFor(model => model.Password)
                       
                        </div>
                        
                        <div class="group">
                            <label for="pass" class="label">Repeat Password</label>
                            <input name="ConfirmPassword" id="ConfirmPassword" type="password" class="input" data-type="password">
                        </div>

                        <div class="group">

                            <label for="pass" class="label">Email Address</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { id = "Email", @class = "input", type = "text", name = "userRegister" } })
                            @Html.ValidationMessageFor(model => model.Email)
                     
                        </div>
                        <div class="group">
                            <label for="pass" class="label">Phone Number</label>
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { id = "PhoneNumber", @class = "input", type = "text", name = "userRegister" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber)
                        </div>
                        <div class="group">
                            <label for="pass" class="label">First Name</label>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { id = "FirstName", @class = "input", type = "text", name = "userRegister" } })
                    
                        </div>
                        <div class="group">
                            <label for="pass" class="label">Last Name</label>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { id = "LastName", @class = "input", type = "text", name = "userRegister" } })
                        </div>

                        <div class="group">
                            <label for="pass" class="label">Picture</label>
                             <input type="file" name="UserPic" id="UserPic" accept="image/jpg, image/jpeg">

                            </div>

                        <div class="group">
                            <input type="submit" class="button" value="Sign Up">
                        </div>
                       
                        <div class="hr"></div>
                        <div class="foot-lnk">
                            <label for="tab-1">Already Member?</label>
                        </div>
                    </div>
                }

</div>
        </div>
    </div>

</div>





